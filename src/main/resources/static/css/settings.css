:root{
  --maxw: 720px;
  --radius: 16px;
  --gap: clamp(10px, 2vw, 16px);
  --pad: clamp(14px, 2vw, 18px);
  --tile: clamp(120px, 12vw, 200px);
  --controlH: 44px;
}

html,body{height:100%}
body{
  margin:0; 
  color:#fff; 
  background: 
  rgb(24 24 24);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #111;
  font-family: system-ui, -apple-system, "Hiragino Kaku Gothic ProN", "Noto Sans JP", sans-serif;
}

.container{
  min-height:100dvh; display:grid; place-items:center;
  padding: 6vh 4vw;
}

.panel{
  width:min(var(--maxw), 92vw);
  background: rgba(255,255,255,.04);
  border: 1px solid rgba(255,255,255,.14);
  border-radius: var(--radius);
  padding: clamp(18px, 4vw, 32px);
  box-shadow: 0 10px 30px rgba(0,0,0,.4);
}

h1{
  margin:0 0 1.2em; text-align:center; font-size: clamp(22px, 4vw, 28px);
  letter-spacing:.04em;
}

.form{ display:grid; gap: var(--gap); }
.row{
  display:grid; grid-template-columns: 160px 1fr; align-items:center; gap: 12px; min-height: var(--controlH);
}
.label{ opacity:.9; font-weight:700; letter-spacing:.04em; }

input[type="text"], select{
  width:65%; padding: var(--pad);
  border-radius: 12px; border:1px solid rgba(255,255,255,.16);
  background: rgba(0,0,0,.25); color:#fff; outline:none;
}
input[type="text"]:focus, select:focus{ border-color: rgba(255,255,255,.4); }

.actions{ display:flex; justify-content:flex-end; margin-top: 10px; }
.reset{ margin-top: 18px; display:flex; justify-content:flex-start; }

.btn{
  all:unset; cursor:pointer;
  padding: 12px 18px; border-radius: 12px; font-weight:700;
  border: 1px solid rgba(255,255,255,.18);
  background: linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,.02));
  box-shadow: inset 0 1px 0 rgba(255,255,255,.12);
}
.btn:hover{ transform: translateY(-1px); }
.btn:active{ transform: translateY(0); }

.btn.save{ }
.btn.danger{ border-color: rgba(255,80,80,.35); color:#ff9a9a; }

/* トグルスイッチ */
.switch{
  --w: 56px; --h: 30px;
  position: relative;
  display: inline-block;
  width: var(--w);
  height: var(--h);
  cursor: pointer;
}

/* checkbox だけに適用。全面ヒットエリア&最前面 */
.switch input[type="checkbox"]{
  position: absolute;
  inset: 0;
  opacity: 0;
  margin: 0;
  cursor: pointer;
  z-index: 1;
}

/* hidden は完全に無視 */
.switch input[type="hidden"]{ display: none; }

.switch i{
  position:absolute; inset:0; border-radius: var(--h);
  background: rgba(255,255,255,.15);
  box-shadow: inset 0 2px 6px rgba(0,0,0,.45);
  pointer-events: none;
  transition: background .18s ease;
}
.switch i::after{
  content:"";
  position:absolute; top:50%; left: 4px; translate: 0 -50%;
  width: calc(var(--h) - 8px); height: calc(var(--h) - 8px); border-radius:50%;
  background: #fff; box-shadow: 0 2px 10px rgba(0,0,0,.35);
  transition: transform .18s ease;
}

/* + → ~ に変更して、間に hidden が来ても反応するように */
.switch input[type="checkbox"]:checked ~ i{
  background: rgba(66, 194, 131, .5);
}
.switch input[type="checkbox"]:checked ~ i::after{
  transform: translateX(calc(var(--w) - var(--h)));
}
